<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.0"
	xmlns="http://java.sun.com/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd">
	<persistence-unit name="commManagementPU"
		transaction-type="RESOURCE_LOCAL">

		<!-- Define EclipseLink as the JPA provider -->
		<!-- <provider>org.eclipse.persistence.jpa.PersistenceProvider</provider> -->

		<!-- Define Hibernate as the JPA provider -->
		<provider>org.hibernate.ejb.HibernatePersistence</provider>

		<!-- Classes to map -->
		<class>fr.uv1.bettingServices.Person</class>
		<class>fr.uv1.bettingServices.Competition</class>
		<class>fr.uv1.bettingServices.Pari</class>
		

		<properties><!-- JPA properties -->
			<property name="javax.persistence.jdbc.url"
				value="jdbc:postgresql://localhost:54321/filrouge" />
			<property name="javax.persistence.jdbc.user" value="" />
			<property name="javax.persistence.jdbc.driver" value="org.postgresql.Driver" />
			<property name="javax.persistence.jdbc.password" value="filrouge" />
			<!-- Provider specific properties -->
			<!-- Hibernate will use some defaults depending on the database -->
			<property name="hibernate.dialect" value="org.hibernate.dialect.PostgreSQLDialect" />

			<!-- Hibernate will display requests to the database -->
			<!-- <property name="hibernate.show_sql" value="true"/> -->

			<!-- EclipseLink specific properties -->

			<!-- EclipseLink should create the database automatically -->
			<!-- <property name="eclipselink.ddl-generation" value="drop-and-create-tables"/> -->

			<!-- EclipseLink should show the sql generated for each request -->
			<!-- <property name="eclipselink.ddl-generation.output-mode" value="database"/> -->
		</properties>
	</persistence-unit>
</persistence>
